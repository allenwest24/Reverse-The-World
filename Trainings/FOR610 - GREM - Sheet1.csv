Term,Ellaborate,Book,Page
Malware ,"- Code that is used to perform malicious actions.
- Less about capabilities and more about the use.
- Typically a person behind the malware.",1,5
Input to REM Staff,"- Verbal reports
- suspicious files
- file system image
- memory image
- network logs
- anomaly observations",1,10
Output from REM Staff,"- What malware does
- How to identify it
- attacker's profile
- IR recommendations
- reports and IOC's
- Malware trends",1,10
Formal Report of Malicious Program,"- Summary of the analysis: key takeaways
- Identifications: file type, name, size, hashes, malware names, current detection capabilities
- Characteristics: capabilities for infecting files, self-preservation, spreading, leaking data, interation with attacker, etc.
- Dependencies: Files and network resources needed, OS versions, custom DLLs, executables, URLs, scripts
- Behavioral and code analysis findings: behavioral, static, and dynamic observations.
Supporting figures: logs, pics, strings, functions
- Incident recommendations: IOCs, eradication steps.",1,11
Virus Total,- Exports: table showing list of functions that were designed to be invoked outside of the DLL,1,14
Hybrid Analysis by Payload Security,"- Free website
- Details on behavior of specimen
- Detonates sample in a sandbox
- Identifies mutants",1,15
Mutant (mutex),"-  serves as a flag that programs can use to serialize access to a
resource.
- These flags are sometimes used by malware to avoid reinfecting the host, acting as infection
markers.",1,15
PassiveTotal,"- Provides historic information about the IP addresses to
which malware resolved over time, network details for those IPs, and indicators that those resources were associated with malicious activities.",1,16
Open Threat Exchange,"- Details about hostnames, mutant values, dropped files, signatures",1,17
Network Traffic to/from malware,"- Beaconing
- C2
- Exfil",1,19
Beaconing,- periodic messages to adversary with info on the state of the program and host,1,19
Command and Control,"- Obtaining instructions from the adversary
regarding actions that the specimen needs to perform, such as upgrade itself or scan a host.",1,19
Exfiltration,"- Sending stolen data, such as keystroke logs, to the adversary.",1,19
Self-Defending,"- Detect virtualization
- Detect debuggers or dissasemblers",1,29
Patching,- Editing parts of the malware that detects virtualization or tools.,1,30
CloneZilla,- Disk cloning for use of physical devices instead of VMs.,1,32
FOG,- Disk cloning for use of physical devices instead of VMs.,1,32
dd,- Disk cloning for use of physical devices instead of VMs.,1,32
Deep Freeze,"- Snapshot functionality but for physical devices.
- Not as reliable
- Malware can target aspect of these programs.",1,32
RollBack Rx,"- Snapshot functionality but for physical devices.
- Not as reliable
- Malware can target aspect of these programs.",1,32
PXE Booting,- Restore a clan system image over the network.,1,32
82,"- PeStudio
- strings
- CFF Explorer
- perframe
- Detect It Easy
- signsrch: Locates code used for crypto, compression, and more.
- pescan and PortEx: examine key aspects opf Windows executable files and identify some anomalies.
- MASTIFF: extracts many details from various types of malware; good for bulk review of many samples
- Exiftool: displays metadata embedded in files of various types
- TrID: Identifies the type of file you're starting to examine.
- Viper: Manages the malware collection and extracts various static properties about the files.",1,"33, 48"
Behavioral Analysis Tools,"- Process Hacker
- Process Monitor
- RegShot
- Wireshark
- fakedns",1,33
Code Analysis Tools,"- Ghidra
- x64dbg/x32dbg
- OllyDumpEx
- jmp2it
- Scylla",1,33
strings,"- Present on most linux distributions
- By default extracts only ASCII-encoded strings
- extract unicode strings by specifying --encoding=l
- -a examines the whole file rather than solely the initialized and loaded sections of object files.",1,42
pestr,"- Similar to strings utility
- part of the Pev toolkit which is for examining windows executables
- --net extracts only those strings that look like network related details such as hostnames and IP addresses.",1,42
PeStudio,"- Free Windows tool that can display static properties
- Calculates various hash values
- ""indicators"" area automatically highlights potentially malicious aspects of the Windows executable.
- Displays contents of the specimens import table in ""imports""
- Perframe is an alternative.",1,44-46
PE (Portable Executable),"- Windows executables follow this format.
- Specifically formatted ehader that contains the details the operating system needs to load the file into memory and set up the runtime environment.
- Tools that use this include PeStudio, Detect It Easy (DIE), and Exeinfo PE.
- Can reveal how a file was packed.",1,47
Packing,"- PE header can reveal information about how a file was packed, and DIE and Exeinfo can help with this.",1,47
Exeinfo PE,"- Gathers information about PE headers in windows executables
- Helps understanding how a file was packed.
- can rip a file from within embedded artifacts.",1,47
Process Hacker,"- open-source tool designed to help analysts ""monitor system resources, debug software, and detect malware""
- replacement for task manager which is built into windows.
- Alternative is process explorer.
- Network tab shows only the connections active at a given moment.
- Terminate a process by right clicking it and selecting Terminate. Or press Del on keyboard.",1,52
Process monitor,"- Free from Microsoft
- Shows real time file system, registry, and process/thread activity of processes on the infected windows lab system, recording all observed actions in a detailed log file.
- Shows files being accessed, registry keys being queried or set.
- Ctrl + E or click the magnifying gladd to pause capture until ready.
- Ctrl + X or click eraser to clear logs
- Each line shows process name, PID, operation, and path.
- Records results of operations.
- Filter down noise by going to the filter menu or pressing Ctrl + L
- Save filters and load filters to eliminate known windows noise for multiple projects. These filters are stored in PMF files.",1,"52, 54, 60"
ProcDOT,"- Companion tool to process monitor that examines key aspects of the process moniotr log in a convinient manner.
- Free",1,52
Regshot,"- Open source tool enables analysts to determine how the malicious program changes the state of the file system and the registry of its host during the infection.
- Used to compare the state of the system before and after the infection, and generates a report to highlight changes.
- 1st Shot, 2nd shot, compare
- Cannot provide information about the specific sequence of events or temporary changes between shots. Also doesn't show what process is responsible for these changes.",1,"52, 60"
Wireshark,"- Popular open source network sniffer.
- Observe network traffic.
- Maintains a historical record but doesnt specify which local process was involved in the connection.
- Activate capture by clicking eth0 on right side or by pressing Ctrl + E
- Right click a packet that is part of an HTTP connection and select 'Follow TCP Stream'.",1,52
TcpLogView,"- free tool
- monitors opened TCP connections on your system and adds a new log line every time that a TCP connection is opened or closed.
- Solves the accountability of past connections from Process Hacker and Wireshark.",1,52
"HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\brbbot,","- Registry key causing program brbbot to run automatically.
- Presistent mechanism.",1,60
\??\C:\Users\REM\AppData\Roaming\brbconfig.tmp.,"- Registry key that stores the names of files to be renamed whent he system restarts.
- When a program renames a file that is currently in use.",1,60
.pf file extension,"- Files that are automatically generated by Windows to allow the OS to start the process a bit faster the next time it runs.
- Creation or modification of these allow for insight into the specific programs that were executed duering the period between two regshots.",1,60
ProcDOT,"- Tool to correlate, filter, and visualize contents of process monitor logs and PCAP network sniffer capture files.
- Export process monitor to csv with Ctrl + S
- To load your log files into ProcDOT, point ProcDOT to the Process Monitor CSV file by pressing the ""..."" button in the Procmon area. Then click the ""..."" button in the Launcher area.
- automatically assigns the light gray color to the processes that were present on the system before Process Monitor began capturing data and presents you with the remaining black-colored process names and IDs.
- Generate the activity diagram by clicking the Refresh button.
- Can also import PCAPs.",1,63-65
fakedns,"- Utility that automatically responds to DNS queries with the IP of the host on which it runs.
- Alternative is making an entire DNS server or modifying the ""hosts"" file on the infected host.
- run by typing fakedns
- Alternative is the InetSim DNS emulator",1,67
"RST, ACK","- Packet sent back to a SYN indicating that a connection cannot be established.
- This can be solved by starting upa  web server on where it is trying to reach. Direct this with fakedns to your lab.
- httpd start",1,"69, 71"
SciTE,"- Text editor
- scite encoded.hex",1,75
xxd,"- xxd -r -p encoded.hex  --> hex to ascii
- xxd -r -p encoded.hex > encoded.raw --> hex to raw
- -r to reverse or convert back to text
- View contents of a bianry file into a readable hex dump.",1,"75, 97"
Dissassemblers and Debugger Tools,"- Ghidra
- x64dbg
- IDA
- Windbg
- Radare2
- Binary Ninja
- Hopper",1,80
Dissassembling,"- Process of translating binary machine-level instructiions that the processor understands to assembly language code that's easier for humans to understand.
- Tools that accomplish this are called dissassemblers
- A modern disassembler is
expected to not only perform the core translation work, but also to intelligently distinguish between code and data embedded into the executable, provide comments and labels, and otherwise help the analyst's reverse-engineering efforts.",1,81
Static analysis,- Using a dissassembler to examine a specimen's code without actually executing it,1,81
Dynamic analysis,"- Opposite of static analysis
- Involves actually running the program while examining its activities at the assembly level.
- Debuggers are tools designed for this.",1,81
Debuggers,"- Tools with built-in dissassemblers to aid in static and dynamic reverse engineering activities.
- x64dbg is an example.
- ""spy"" on the parameters the program passes to external
functions, as well as to examine the return values of API calls.",1,81
x64dbg,"- Capable dsebugger for Windows executables
- Open source.
- Convinient UI that reverse-engineers can use to navigate through the specimen to perform static and dynamic code-level analysis
- Enable susers to install plugins and write scripts to extend the functionality.
- Can handle 32-bit and 64-bit code (x32dbg and x64dbg)
- Load specimen by dragging the executable icon on top of the x64dbg icon.
- Can also use File>Open (F3)
- Upon loading, pauses in the beginning of the programs code before it has a chance to run.
- Dissassembler built in is called views.
- Second column is hexidecimal relative address or offset.
- Third column shows spaced out hexidecimal instructions that the processor can recognizze and execute.
- Next column is the human-readable assembly 
- Last column is comments, often auto-generated.
- Debug menu lets you run, single-step, or set breakpoints
- Interact by typing commands in the bottom left corner
- Set a breakpoint on an API call: SetBPX Readfile (or bpx or bp)
- View breakpoints in the breakpoint tab.
- After setting breakpoint, Debug > Run
- To find which parameters are being passed into a funciton, look at the middle region on the right side of the CPU tab.
- Run to user code in debug menu (Alt+F9)",1,"82, 83"
breakpoint,"- Setting one of the code that a .exe might use to read a .tmp file from the file system will bring us to the general vacinity of the code the specimen uses to decipher the files contents
- In x64dbg: SetBPX APINAME (also can use bpx and bp)",1,84
Windows APIs,"- Code references these to manipulate the system.
- Useful to find which of these the code is using to find out what the instrcutions do.
- Look at the specimens import table using PeStudio",1,84
RIP,"- Current or next instruction to execute.
- RIP is the register for the next instruction on 64-bit whereas EIP is the same for 32-bit.",1,85
rcx,- Register that 64-bit code uses for supplying the first parameter to a function.,1,87
handle,"- Found in handles tab of x64dbg
- Can also be found in the Process Hacker tool.",1,88
Run to user code,"- Debug menu of x64dbg and select Run to user code (Alt+F9).
- Fully loads the file and the gets to where the developer code starts.",1,89
Call Stack,"- Shows how specimen found itself.
- shows a path of nested function in reverse call order.
- Top line
- ""From"" is where we are currently paused.
- ""To"" is where we will return to.",1,89
Call,- Typical operand in an instruction in which functions are invoked in assembly,1,90
Run until Selection,"- Useful when you want to find the value of some operation..
- Call on the instruction immediatly following an API call like CryptDecrypt.",1,91
API Monitor,"- Tool to examine API calls made by the processes running on Windows systems.
- Free
- Simpler and faster alternative to going through with a debugger to identify API calls.
- Has filters for what kinds of API calls we care about.
- Displays what parameters were passed to the external function and what data was returned by the function.
- Faster, but sometimes less control and detail than a debugger",1,94
Boolean XOR,"- Method used to obfuscate strings
- Simple implementation makes it popular.
- XOR each chracter with a one byte key value
- To decode, do the same operation.
- Key is stored in a config file or within the executable.
- Get to raw format with xxd
- translate.py encoded.raw decoded.txt 'byte ^ 0x5b'
or
- perl -pe 's/(..)/chr(hex($1)^0x5b)/ge' encoded.hex > decoded.txt",1,96
"ROR, ROL, ROT","- ROR rotates each byte in a string to the right
- ROL is same but to the left.
- ROT rotates each letter in the alphabet.",1,96
INetSim,"- Observe SSL encrypted data after it is decrypted.
- Emulates HTTPS, SMTP, FTP, POP3, TFTP, IRC
- /etc/inetsim/inetsim.conf is the main configuration file of INetSim. It enables you to define which services INetSim should emulate. It also enables you to define service-specific options, such as listening ports, static DNS mappings, HTTP response parameters, SSL configuration details, and so on.
- /var/log/inetsim contains the inetsim log files. The most useful of these files is service.log which cointains details about the requests inetsim received and the responses it sends.
- /var/lib/inetsim contains data files used by INetSim emulators, such as the files provided by the HTTP emulator or the certificate used for SSL encryption for the HTTPS emulator.
- DNS emulator built into INetSim by editing the inetsim.conf file, removing the comment mark from the line start_service dns, and changing the dns_default_ip value to point to the IP address of your REMnux system.
- intetsim (to run)
- ""This is the INetSim default binary"" is the default response to requests.
- ""more /var/log/inetsim/service.log"" to see details of the connection
- This tool looks at the server side of the connection.",1,109-111
Fiddler,"- Client side version of InetSim
- Intercepts local HTTP and HTTPS traffic
- Tools>Options, ""Captrue HTTPS CONNECTs"" and ""Decrypt HTTPS traffic"", ""Ignore server certificate errors (unsafe)""
- automatically generate responses to HTTP and HTTPS requests
- To enable this feature, you need to go to the AutoResponder tab and enable the checkbox called ""Enable rules,""
- To see the properties, you need to select the HTTPS connection, go to the Inspectors tab, and then go to the Raw tab.",1,116
ip-tables,"- powerful Linux-based firewall
- NAT capabilities that can be used to intercept and redirect network connections going through all possible IP addresses.
- Windows virtual machine needs to be configured to point to the REMnux virtual machine's IP as its default gateway
- To enable iptables traffic redirection on most Linux systems, you can use this command:
iptables -t nat -A PREROUTING -i eth0 REDIRECT
- To disable this capability, you could reboot the Linux system or enter the following command:
iptables -t nat -D PREROUTING -i eth0 -j REDIRECT
- the accept-all-ips command, as shown at the bottom of the slide. This is a wrapper script around iptables. In addition to enabling IPv4 traffic redirection, the script also instructs iptables to handle IPv6 traffic.
- accept-all-ips start",1,117-118
Netcat,"- When we dont know what protocol a specimen will use.
- Can listen on any arbitrary port.
- Netcat will accept a connection on the port you designate, and send
whatever data it receives as a payload of that connection to STDOUT.
- -l to listen
- -p specifies listening port
- -n directs netcat to avoid trying to resolve the connecting IP addresses to hostnames.
- Can help receive a connection and save the payload to a file.",1,118
MZ,- Character sequence that is part of the PE header structure that carries the MS-DOS compatible header data and designated the file as an MS-DOS compatible program.,1,118
Behavioral Interaction Observation Tools (Additional),"- TcpLogView: Maintains a historical log of local TCP connections, showing which process handled which connection.
- PE Capture: Records and captures local PE files that try to run.
- PolarProxy: Intercepts and decrypts SSL/TLS traffic in the lab.
- ApateDNS: DNS server for redirecting hostname resolution requests; similar to fakedns but runs on Windows.
- FakeNet-NG: Intercepts network traffic in the lab, emulating common protocols; similar to INetSim but runs on Windows.",1,124
Code lifecycle,"- Source code is translated into object code by a compiler
- Object code is combined wiht libraries to create an executable.
- OS reads executable info, allocates memory, and loads libraries into memory.
- Control is transferred too the code to execute.",2,5
Ghidra,"- Software reverse engineering sutie of tools developed by the NSA research directorate.
- Supports variety of processor architectures and runs on various platforms.
- Requires Java Runtime and Development Kit
- Key features include its ability to disassemble and decompile code and support scripts and plugins for extensibility.
- Competitors are IDA, Radare/Cutter, Binary Ninja, Hopper and Capstone.
- File vs project depending on multi-component cases
- Single user and shared options
- Drag and drop sample into the project window
- CodeBrowser is the built-in tool for reviewing the dissassembled program and can be used by double-clicking t he program.
- Auto-analysis includes dissassembling code based on the flow of execution, identifying functions and generating cross-references to those functions.
- “WindowsPE x86 Propagate External Parameters.” This analysis option will attempt to identify a function’s arguments as named in Microsoft’s API documentation and list them in the comments.
- Listing view presents the target program’s code and data.
- Jump to a different location in the code using the Program Trees window on the top-left. This window breaks up the Windows executable into its headers and sections.
- in .text we have a 32 bit address for the location of code in memory after the program is loaded, not the location on disk, and an x86 assembly instrcution.
- The Function Graph view is helpful for visualizing loops and complex conditionals within a function, but the Listing view is more compact and is easier for some people to navigate.
- Green arrow for if true, red arrow for if false, blue for unconditional jump.
- Symbol Tree window lists categories including Imports (program dependencies), Exports (entry points into the program), and internal functions. A “symbol” is a name associated with an address.
- access imports via Window > Symbol References.",2,6-10
Decompiling,- Provides C representation of dissassembly.,2,6
Sections (Windows Executable),"The section names listed here are typical:
• .text: Contains executable code
• .rdata: Contains read-only data
• .data: Contains data
• .reloc: Contains relocation data to fix up addresses in the file if it is not loaded at its preferred address",2,12
Exports,"- exports provide insight into functions offered by the
executable.
- It is normal for DLLs to have exported functions, but executables (such as our example) normally do not have multiple exports.",2,15
Import Address Table (IAT),- (IAT) lists the APIs (functions) used by the program that are contained in external libraries (DLLs).,2,16
Operating system,"- Purpose is to manage hardware
- Everything else the OS does is to provide managed access for user space code.
- Allocating memory requires managedment of the system RAM.",2,18
strace (strace-for-NT),- tool to monitor system calls made by a program,2,18
System Monitor,- Sysinternals tool to monitor system calls for registry and file-related activity.,2,18
Ex (extended),- Naming convention Microsoft uses to note that a fucntion is updated and is not compatible with the past version.,2,19
ANSI (A),- Microsoft uses to show whether and cuntion supports ANSI (8-bit character),2,19
Wide character (W),"- Microsoft naming convention to shwo a function supports wide characters (16-bit character) strings.
- A wide character is a 2-byte character representation, specifically UTF-16 which is a unicode character encoding.",2,19
operand,"- An instruction (depending on the operation) can take 0, 1, or 2 operands, where the operands can be a register, a location in memory, or an immediate value (such as the number 0x6453).
- The different ways of specifying where to read and write data are collectively called operand addressing modes.
- Addressing modes use implied operands, where they don't need to be given as arguments.
- Some examples of implicit operands are the stack operations, which move data to and from the extended stack pointer (ESP) register.",2,22
register-based CPU,"- a CPU with  on-chiip memory locations called registers
- most widespread
- grabs instructions from memory,. decodes, and performs the action",2,23
registers (general purpose),"- EAX, EBX, ECX, EDX, EBP, ESP, ESI, and EDI
- Can have a specific purpose depending on the intsturction calling them",2,24
EAX,"- Register used by default for addition and multiplication
- Also stores the return values of a function",2,24
ECX,- Counter for looping,2,24
EBP,- Used to reference arguments passed intoa fucntion as well as the local variabls within a fucntion.,2,24
ESP,- register used to point to the last item on the stack and is affected by stack-related functions,2,24
ESI/EDI,- Registers used for memory transfer instrcutions.,2,24
registers (special use),"- Registers witha  specific purpose
- EIP, EFLAGS",2,25
EIP,"- register that contains the address of the next instruction to execute. 
- RIP for 64bit",2,25
EFLAGS,- Bits on this register used to represent outcome of computations and to control the operation of the CPU.,2,25
Registers (segment),"- CS, DS, ES, FS, GS, and SS
- Used to describe different segments of memory",2,25
CS,- default segment register when fetching instructions,2,25
DS,- Defaults segment register for accessing data with the ESI and EDI registers,2,25
SS,- default segment register for accessing data with teh ESP register.,2,25
register (low and high bits),"In other words, the naming scheme for EAX, EBX, ECX, and EDX is as follows:
• E<letter>X == dword (32-bit) value of the register
• <letter>X == low word (16-bit) value of the register
• <letter>H == high byte (8-bit) of the <letter>X value of the register
• <letter>L == low byte (8-bit) of the <letter>X value of the register
EAX would use the value 0x68776453. An
instruction that references the AX register would get the low word (the low 16 bits) of EAX, meaning it would use the value 0x6453. An instruction that references the AH register would get the high byte (the high 8 bits) of the AX register, meaning it would use the value 0x64. Finally, if an instruction references the AL register, it would get the low byte (the low 8 bits) of the AX register, meaning it would use the value 0x53.",2,26
word,"- Natural size of a processors unit of data (typically 16)
- dword is 32
- qword is 64",2,27
dword,"- twice the size of a word. In practical terms, this means a dword is 32 bits (4 bytes)
long.",2,27
qword,- quadword or 64 bits,2,27
pointer,"- a variable that contains the address of some location in memory.
- When the address that the pointer points to is accessed, it is called ""dereferencing,"" because the pointer references (points to) another location in memory
- There are also efficiency reasons for using pointers. For instance, rather than copying an entire data structure around in memory, it is far more efficient to copy the value of a pointer (which is typically 4 bytes on a 32-bit system).",2,28
direct addressing,"- when the address is specified as an operand
- many tools suse brakcets to specify locations of memory
- IDA uses use dword_410230 instead of [0x410230].",2,30
indirect addressing,"- memory address values resides in a rgeister.
- Can increase efficiency becaus eyou can increment the value that resides in a rgeister.
- Format is base + (index * scale) + displacement.
•[EAX]: Access dynamically allocated memory (base).
- [EBP + 0x10]: Access data on the stack (base + displacement).
• [EAX + EBX * 8]: Access an array with 8-byte structures (base
+ index * scale).
• [EAX + EBX + 0xC]: Access fields of a two-dimensional array of
structures (base + index + displacement).",2,31
effective address,- calculated destination address residing in a register.,2,31
data structures,"- layout and representaiton of info and how we access it
- strings, LL, sockets, handles, arrays",2,33
code-data duality,- The ability for code to reference itself as data or executable code. Think about viruses copying themselves toa file.,2,34
symbolic constants,"- Some windows APIs accept arguments using flags hich are basically symbolic constants
- test that corresponds witha  nermical value.
- can be combined if multiplews apply.
- flags are OR's when combined.",2,36
instructions,"- categories of data manipulation, data transfer, branching and codnitional instructions
- Manipulation - include arithmetic, boolean, and bit manipulation (SHR, SHL)
- Transfer - MOV, XCHNG
- Conditional - JMP, CALL, CMP, TEST",2,37
branching,"- When the CPU jumps from one point of memory to the next (function calls, etc.)
- EIP is updated.
- includes unconditional and conditional jumps.
- looping is also an example of branching.",2,38
conditional jumping,"- could be boolean or arithmetic
- large disadvantage of using arithmetic or Boolean instructions to evaluate a condition. They
modify the value in the destination operand.
- evaluate a condition without modifying the value in an operand, you can use the CMP and TEST
A: jump if above
B: jump if below
E: jump if equal
G: jump if greater than
L: jump if less than
Z: jump if zero
N: jump if not condition (for example, JNZ is jump if not zero)
- Jump instructions with above/below condition codes evaluate the arguments as if they were unsigned.
- Jump instructions with greater/less than condition codes evaluate the arguments as if they were signed.
- The developer, not the processor, determines if data is signed or unsigned, by selecting the appropriate
jump instructions
(Unsigned) JB: True if Carry flag = 1
JA: True if both Carry and Zero flag = 0
(Signed) JL: True if Sign flag != Overflow flag
JG: True if Zero flag = 0 and Sign flag = Overflow flag
JE/JZ: True if Zero flag = 1, same opcode",2,40
Internet Relay Chat (IRC),"- once the msot popular protocol for controlling amlicious code.
- easy to detect this especially in corporate environments because it is abnormal.
- Now HTTP is used by malware more frequently.",2,44
HTTP comms (for amlicious code),"- Create connection by calloing InternetOpen to create network connection and InternetConnect function to initiate connection to the remote server.
- Build HTTP request with HttpOpenRequest function.
- Create any custom headers with HttpAddRequestHeaders function
- Send data with HttpSenRequest
- Windows connects and sends.
- use InternetReadFile function to read response",2,45
TEST,- implied AND,2,52
Variables,"- local - only accessible by the function that allocates it.
- Local variables are allocated on the program stack.
- Stack gets freed when function exits.
- Global - can be used anywhere within the program and is references using an address
- Static - can be used only from within the fucntion that allocates it but unlike local it does not get marked for reuse when the function exitst.
- Global and static have their own segment of memory but are not on the stack.
- global and static look the same in assembly.",2,53
functions,"Similar to mathematical functions, three basic components make up a function:
• Input that is passed into the function (from the caller)
• The body of the function, which is the code to perform the task
• The value returned
- To call a funtion, a branch is typically required.
- After the function finishes, the CPU continues processing instructions after the location where the function was originally called.
- This is done by saving the return address on the stack.
- Because control is transferred when calling a function, certain housekeeping activities must be performed prior to entering the body of the function.
   - parameters must be set up to be passed in to the fucntion. This is done by placing variables in registers or pushing them onto the stack.
   - Addess of the next instruction after the function call must also be saved on the stack.
- When returning from a function some housekeeping must also be done.
   - return values must be set up
   - EAX typically holds return values.
   - Local variables must be removed from the stack and all registers must eb restored.
   - Then control is transferered to the return pointer (address after function call that we saved.)",2,64
function prologue,"- code at the beginning of the function that sets up the environment for the function
- allocating local variables and saving registers.",2,65
function epilogue,"- code at the end of the function that restores the environment after the function is finished.
- undo what was done in the prologue
- cleaning up the stack and restoring registers
- POPs, opposite of PUSH. Places the value at the top of the stack into the location specified in the operand and increases ESP by 4 bytes.",2,66
POP,"- opposite of PUSH. Places the value at the top of the stack into the location specified in the operand and increases ESP by 4 bytes.
- usually used to restore a value previously placed on teh stack.",2,66
hot patching,"- In the prologue of code compiled with microsoft compilers could be  the instruction mov edi, edi.
- 2byte equivalent for a NOP.
- Hot patches an executable when it is running in memory without the need to stop and restart te program.
- Overwritten with a 2-byte rleative jump that transfers control to another jump that can jump anywhere in memory.
- This long jump is typically located 5 bytes before the start of the function being patched. 
- When the function is not patched the 5 bytes that holda relative jump will be 5 NOPs.
- 2-byte instruction (""mov edi, edi"") was chosen to ensure that the instruction pointer (from a multithreaded process) won't be pointing to the middle of an instruction during the hot-patching process.",2,66
stack,- Used to store local variables and parameters.,2,67
frame pointer,"- EBP, unchanging",2,67
Saved Frame pointer,"- Prior to copying ESP to EBP, we have to save EBP onto the stack to be restored later.",2,67
EBP,"- Frame pointer
- EBP -# refers to local variable
- EBP +# referse to parameters passed in.",2,67
cdecl,"- most common calling convention for functions
- arguments passed into the function are pushed onto the stack from right to left (reverse order)
- the return value from the fucntion is in the EAX register
- it is up to the code block that calls the function to clean up the stack (remove parameters passed into the funtion).
- by requiring the calliing code block to clean up the stack, a vbariable number of arguments can be passed into the function.
- uses ADD after CALL toi cleanup stack.",2,71
stdcall,"- Alternative to cdecl used when calling functions in the WIN32 API.
- similar to cdecl expect that the function is responsible for removing the arguments passed in from the stack
- results in smaller code size because stack cleanup instructions are not required in the code block calling the function.
- does not use ADD after CALL to cleanup the stack.",2,71
fastcall,"- calling convention where arguments are first passed in by register and then if extra arguments are required they ar epushed onto the stack.
- similar to stdcall, callee is responsible for cleaning the stack
- the return value is in EAX
- Microsoft and GNU compilers use the ECX and EDX registers to pass arguments, no stack cleanup within fucntion",2,72
thiscall,"- Calling convention sed in C++ programs
- ""this"" pointer is passed in the ECX register for Microsoft compilers and pushed onto the stack last by GNU compilers
- compiler also dictates how the stack cleanup will occur
- with microsoft compilers, the callee cleans up adn with GNU compilers, the caller performs cleanup.
- MOV ECX, EAX",2,72